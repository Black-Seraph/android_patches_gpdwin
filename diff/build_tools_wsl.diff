diff --git a/tools/ijar/zip.cc b/tools/ijar/zip.cc
index 3aa06db..22527cc 100644
--- a/tools/ijar/zip.cc
+++ b/tools/ijar/zip.cc
@@ -197,8 +197,9 @@ class InputZipFile : public ZipExtractor {
 //
 class OutputZipFile : public ZipBuilder {
  public:
-  OutputZipFile(int fd, u1 * const zipdata_out) :
+  OutputZipFile(int fd, u1 * const zipdata_out, size_t mmap_length) :
       fd_out(fd),
+      mmap_length_(mmap_length),
       zipdata_out_(zipdata_out),
       q(zipdata_out) {
     errmsg[0] = 0;
@@ -252,6 +253,7 @@ class OutputZipFile : public ZipBuilder {
   };
 
   int fd_out;  // file descriptor for the output file
+  size_t mmap_length_;
 
   // OutputZipFile is responsible for maintaining the following
   // pointers. They are allocated by the Create() method before
@@ -933,6 +935,7 @@ size_t OutputZipFile::WriteFileSizeInLocalFileHeader(u1 *header_ptr,
 int OutputZipFile::Finish() {
   if (fd_out > 0) {
     WriteCentralDirectory();
+    munmap(zipdata_out, mmap_length_);
     if (ftruncate(fd_out, GetSize()) < 0) {
       return error("ftruncate(fd_out, GetSize()): %s", strerror(errno));
     }
@@ -1001,7 +1004,7 @@ ZipBuilder* ZipBuilder::Create(const char* zip_file, u8 estimated_size) {
     return NULL;
   }
 
-  return new OutputZipFile(fd_out, (u1*) zipdata_out);
+  return new OutputZipFile(fd_out, (u1*) zipdata_out, mmap_length);
 }
 
 u8 ZipBuilder::EstimateSize(char **files) {
